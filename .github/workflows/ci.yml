name: Integration Continue

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_DATABASE }}
    
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done 

      - name: Setup environment variables
        run: |
          echo "CI_ENV=true" >> $GITHUB_ENV
          # echo "CI_TEST_DB_HOST=db" >> $GITHUB_ENV
          # echo "CI_TEST_DB_PORT=3306" >> $GITHUB_ENV
          # echo "CI_TEST_DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          # echo "CI_TEST_DB_PASSWORD=${{ secrets.TEST_DB_PASSWORD }}" >> $GITHUB_ENV
          # echo "CI_TEST_DB_NAME=${{ secrets.TEST_DB_NAME }}" >> $GITHUB_ENV


      - name: Build server image
        run: |
          docker build -t my-server-image:latest -f server/Dockerfile server

      - name: Run tests server
        run: |
          docker run --rm my-server-image:latest npm test

      - name: Build client_web image
        run: |
          docker build -t my-client-web-image:latest -f client_web/Dockerfile .

      - name: Build client_app image
        run: |
          docker build -t my-client-app-image:latest -f client_mobile/Dockerfile .

      - name: Push to Mirror
        uses: pixta-dev/repository-mirroring-action@v1.1.1
        with:
          target_repo_url: ${{ secrets.MIRROR_URL }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
